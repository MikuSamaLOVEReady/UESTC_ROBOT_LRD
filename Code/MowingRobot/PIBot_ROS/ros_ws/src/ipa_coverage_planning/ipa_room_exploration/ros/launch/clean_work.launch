<?xml version="1.0"?>
<launch>
    <arg name="model" value="waffle" doc="model type [burger, waffle, waffle_pi]"/>
    <!-- <arg name="model" value="burger" doc="model type [burger, waffle, waffle_pi]"/> -->
    <arg name="configuration_basename" default="turtlebot3_lds_2d.lua"/>
    <!-- <arg name="map_file" default="$(find clean_robot)/maps/clean_room.yaml"/> -->
    <arg name="map_file" default="$(find ipa_room_exploration)/ros/maps/sim.yaml"/>
    <arg name="open_rviz" default="true"/>
    <!-- 启动仿真环境 -->
    <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
        <arg name="model" value="$(arg model)" />
    </include>
    <include file="$(find ipa_room_exploration)/ros/launch/gazebo.launch"/>
    <!-- 启动导航系统，用作目标点路径规划，实现躲避小障碍物-->
    <include file="$(find ipa_room_exploration)/ros/launch/turtlebot3_navigation.launch">
        <arg name="model" value="$(arg model)" />
        <arg name="map_file" value="$(arg map_file)"/>
    </include>
    <!-- 清扫路径规划器 -->
    <!-- <node pkg="ipa_room_exploration" type="room_exploration_client" respawn="false" name="room_exploration_client" output="screen" clear_params="true">
        <rosparam file="$(find ipa_room_exploration)/ros/config/costmap_common_params.yaml" command="load" ns="cleaning_costmap" />
        <rosparam file="$(find ipa_room_exploration)/ros/config/cleaning_costmap_params.yaml" command="load" />
    </node> -->
    <!-- 根据清扫的路径向导航系统发送目标点位 -->
    <!-- 设定距离当前目标点多进时候发布下一个目标点 -->
    <!-- <param name="/NextGoal/tolerance_goal" value="0.25" />
    <node pkg="ipa_room_exploration" type="next_goal" respawn="true" name="next_goal" output="screen" /> -->
</launch>
